diff -Naur broadcom-wl.old/src/wl/sys/wl_iw.c broadcom-wl/src/wl/sys/wl_iw.c
--- broadcom-wl.old/src/wl/sys/wl_iw.c	2008-12-18 05:55:58.000000000 +0900
+++ broadcom-wl/src/wl/sys/wl_iw.c	2009-01-23 02:02:09.000000000 +0900
@@ -62,6 +62,12 @@
 extern struct iw_statistics *wl_get_wireless_stats(struct net_device *dev);
 #endif 
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#define	WL_DEV_IF(dev)		((wl_iw_t*)(dev)->ml_priv)			
+#elif
+#define	WL_DEV_IF(dev)		((wl_iw_t*)(dev)->priv)			
+#endif
+
 #if WIRELESS_EXT < 19
 #define IW_IOCTL_IDX(cmd)	((cmd) - SIOCIWFIRST)
 #define IW_EVENT_IDX(cmd)	((cmd) - IWEVFIRST)
@@ -610,7 +616,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 	struct sockaddr *addr = (struct sockaddr *) extra;
 	int i;
 
@@ -635,7 +641,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 	struct sockaddr *addr = (struct sockaddr *) extra;
 	struct iw_quality *qual = (struct iw_quality *) &addr[iw->spy_num];
 	int i;
@@ -1111,7 +1117,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCSIWNICKN\n", dev->name));
 
@@ -1135,7 +1141,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCGIWNICKN\n", dev->name));
 
@@ -1795,7 +1801,7 @@
 	int paramid;
 	int paramval;
 	int val = 0;
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCSIWAUTH\n", dev->name));
 
@@ -1926,7 +1932,7 @@
 	int paramid;
 	int paramval = 0;
 	int val;
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = WL_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCGIWAUTH\n", dev->name));
 
diff -Naur broadcom-wl.old/src/wl/sys/wl_linux.c broadcom-wl/src/wl/sys/wl_linux.c
--- broadcom-wl.old/src/wl/sys/wl_linux.c	2008-12-18 05:56:13.000000000 +0900
+++ broadcom-wl/src/wl/sys/wl_linux.c	2009-01-23 02:03:36.000000000 +0900
@@ -53,7 +53,9 @@
 #include <linux/pci_ids.h>
 #define WLC_MAXBSSCFG		1	
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#include <net/lib80211.h>
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
 #include <net/ieee80211.h>
 #endif
 
@@ -148,7 +150,11 @@
 	struct net_device *monitor;	
 	bool		resched;	
 	uint32		pci_psstate[16];	
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	struct lib80211_crypto_ops *tkipmodops;	
+	struct lib80211_tkip_data  *tkip_ucast_data;
+	struct lib80211_tkip_data  *tkip_bcast_data;
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
 	struct ieee80211_crypto_ops *tkipmodops;	
 	struct ieee80211_tkip_data  *tkip_ucast_data;
 	struct ieee80211_tkip_data  *tkip_bcast_data;
@@ -159,7 +165,11 @@
 static void wl_timer(ulong data);
 static void _wl_timer(wl_timer_t *t);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+struct lib80211_tkip_data {
+#else
 struct ieee80211_tkip_data {
+#endif
 #define TKIP_KEY_LEN 32
 	u8 key[TKIP_KEY_LEN];
 	int key_set;
@@ -190,7 +200,11 @@
 
 static int wl_found = 0;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#define	WL_DEV_IF(dev)		((wl_if_t*)(dev)->ml_priv)			
+#else
 #define	WL_DEV_IF(dev)		((wl_if_t*)(dev)->priv)			
+#endif
 #define	WL_INFO(dev)		((wl_info_t*)(WL_DEV_IF(dev)->wl))	
 
 #define WL_LOCK(wl)	spin_lock_bh(&(wl)->lock)
@@ -421,7 +435,14 @@
 	}
 	wlif->dev_registed = TRUE;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+
+	wl->tkipmodops = lib80211_get_crypto_ops("TKIP");
+	if (wl->tkipmodops == NULL) {
+		request_module("lib80211_crypt_tkip");
+		wl->tkipmodops = lib80211_get_crypto_ops("TKIP");
+	}
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
 
 	wl->tkipmodops = ieee80211_get_crypto_ops("TKIP");
 	if (wl->tkipmodops == NULL) {
@@ -725,7 +746,11 @@
 	}
 
 	if (wl->monitor) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+		wl_free_if(wl, (wl_if_t *)(wl->monitor->ml_priv));
+#else
 		wl_free_if(wl, (wl_if_t *)(wl->monitor->priv));
+#endif
 		wl->monitor = NULL;
 	}
 
@@ -908,7 +933,11 @@
 	wlif->wl = wl;
 	wlif->wlcif = wlcif;
 	wlif->subunit = subunit;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	dev->ml_priv = wlif;
+#else
 	dev->priv = wlif;
+#endif
 
 	if (iftype != WL_IFTYPE_MON && wl->dev && netif_queue_stopped(wl->dev))
 		netif_stop_queue(dev);
