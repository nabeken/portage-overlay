--- linden/indra/llimagej2coj/llimagej2coj.cpp.orig	2007-02-04 09:52:40.000000000 +0100
+++ linden/indra/llimagej2coj/llimagej2coj.cpp	2007-02-05 21:09:53.000000000 +0100
@@ -66,7 +66,8 @@
 sample debug callback expecting no client object
 */
 void info_callback(const char *msg, void *client_data) {
-	fprintf(stdout, "[INFO] %s", msg);
+	FILE *stream = (FILE*)client_data;
+	fprintf(stream, "[INFO] %s", msg);
 }
 
 
@@ -86,21 +87,23 @@
 	// FIXME: Get the comment field out of the texture
 	//
 
-	LLTimer decode_timer;
-
 	opj_dparameters_t parameters;	/* decompression parameters */
+#ifdef _DEBUG
 	opj_event_mgr_t event_mgr;		/* event manager */
+#endif
 	opj_image_t *image = NULL;
 
 	opj_dinfo_t* dinfo = NULL;	/* handle to a decompressor */
 	opj_cio_t *cio = NULL;
 
 
+#ifdef _DEBUG
 	/* configure the event callbacks (not required) */
 	memset(&event_mgr, 0, sizeof(opj_event_mgr_t));
 	event_mgr.error_handler = error_callback;
 	event_mgr.warning_handler = warning_callback;
 	event_mgr.info_handler = info_callback;
+#endif
 
 	/* set decoding parameters to default values */
 	opj_set_default_decoder_parameters(&parameters);
@@ -116,7 +119,11 @@
 	dinfo = opj_create_decompress(CODEC_J2K);
 
 	/* catch events using our callbacks and give a local context */
-	opj_set_event_mgr((opj_common_ptr)dinfo, &event_mgr, stderr);			
+#ifdef _DEBUG
+	opj_set_event_mgr((opj_common_ptr)dinfo, &event_mgr, stderr);
+#else
+	opj_set_event_mgr((opj_common_ptr)dinfo, NULL, stderr);
+#endif
 
 	/* setup the decoder decoding parameters using user parameters */
 	opj_setup_decoder(dinfo, &parameters);
@@ -181,10 +188,10 @@
 {
 	const S32 MAX_COMPS = 5;
 	opj_cparameters_t parameters;	/* compression parameters */
+#ifdef _DEBUG
 	opj_event_mgr_t event_mgr;		/* event manager */
 
-
-	/* 
+	/*
 	configure the event callbacks (not required)
 	setting of each callback is optional 
 	*/
@@ -192,6 +199,7 @@
 	event_mgr.error_handler = error_callback;
 	event_mgr.warning_handler = warning_callback;
 	event_mgr.info_handler = info_callback;
+#endif
 
 	/* set encoding parameters to default values */
 	opj_set_default_encoder_parameters(&parameters);
@@ -264,7 +272,11 @@
 	opj_cinfo_t* cinfo = opj_create_compress(CODEC_J2K);
 
 	/* catch events using our callbacks and give a local context */
-	opj_set_event_mgr((opj_common_ptr)cinfo, &event_mgr, stderr);			
+#ifdef _DEBUG
+	opj_set_event_mgr((opj_common_ptr)cinfo, &event_mgr, stderr);
+#else
+	opj_set_event_mgr((opj_common_ptr)cinfo, NULL, stderr);
+#endif
 
 	/* setup the encoder parameters using the current image and using user parameters */
 	opj_setup_encoder(cinfo, &parameters, image);
@@ -309,18 +321,22 @@
 	base.updateRawDiscardLevel();
 
 	opj_dparameters_t parameters;	/* decompression parameters */
+#ifdef _DEBUG
 	opj_event_mgr_t event_mgr;		/* event manager */
+#endif
 	opj_image_t *image = NULL;
 
 	opj_dinfo_t* dinfo = NULL;	/* handle to a decompressor */
 	opj_cio_t *cio = NULL;
 
 
+#ifdef _DEBUG
 	/* configure the event callbacks (not required) */
 	memset(&event_mgr, 0, sizeof(opj_event_mgr_t));
 	event_mgr.error_handler = error_callback;
 	event_mgr.warning_handler = warning_callback;
 	event_mgr.info_handler = info_callback;
+#endif
 
 	/* set decoding parameters to default values */
 	opj_set_default_decoder_parameters(&parameters);
@@ -336,7 +352,11 @@
 	dinfo = opj_create_decompress(CODEC_J2K);
 
 	/* catch events using our callbacks and give a local context */
-	opj_set_event_mgr((opj_common_ptr)dinfo, &event_mgr, stderr);			
+#ifdef _DEBUG
+	opj_set_event_mgr((opj_common_ptr)dinfo, &event_mgr, stderr);
+#else
+	opj_set_event_mgr((opj_common_ptr)dinfo, NULL, stderr);
+#endif
 
 	/* setup the decoder decoding parameters using user parameters */
 	opj_setup_decoder(dinfo, &parameters);
